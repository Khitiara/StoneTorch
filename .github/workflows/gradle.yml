# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Gradle

on:
  push:
    branches: [ "develop" ]
    paths:
      - '.github/workflows/gradle.yml'
      - '**.gradle.kts'
      - 'gradle/libs.versions.toml'
      - '**.properties'
      - '**/src/**'
  pull_request:
    branches: [ "develop" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest
    if: |
      !contains(github.event.head_commit.message, '[ci skip]')
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
    - name: Build with Gradle
      uses: burrunan/gradle-cache-action@v1
      with:
        arguments: build
    - name: Setting mod version
      run: |
        cat $GITHUB_WORKSPACE/gradle.properties | grep ^archives_base_name= >> $GITHUB_ENV
        echo "minecraft_version=$(cat $GITHUB_WORKSPACE/gradle/libs.versions.toml | grep -oP '^minecraft_ver="\K[^"]+')" >> $GITHUB_ENV
        cat $GITHUB_WORKSPACE/gradle.properties | grep ^mod_version= >> $GITHUB_ENV
    - name: Create package name
      run: echo "package_name=[$minecraft_version] $archives_base_name-$mod_version.${{ github.run_number }}" >> $GITHUB_ENV
    - uses: actions/upload-artifact@v2
      with:
        name: ${{ env.package_name }}
        path: |
          **/build/libs/
          !build/libs/
          !**/*-transformProduction*.jar
